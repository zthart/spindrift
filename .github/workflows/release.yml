name: Tag a dev release on GitHub using the current version according to Cargo.toml
on:
  push:
    branches: [ main ]
jobs:
  make-tag:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.generate-tag.outputs.tag-name }}
    steps:
      - name: Checkout spindrift
        uses: actions/checkout@v3
        
      - name: Unshallow repository
        run: git fetch --prune --unshallow

      - name: Generate tag name
        id: generate-tag
        shell: bash
        run: |
          set -x
          echo "## Creating Tag" >> $GITHUB_STEP_SUMMARY
          CANDIDATE_TAG="$(grep '^version' Cargo.toml | awk '{print $3}' | sed -r 's/\"//g')-dev+$(date +%y%m%d)"
          echo "**\`\$CANDIDATE_TAG\`**: $CANDIDATE_TAG" >> $GITHUB_STEP_SUMMARY
          set +o pipefail
          echo "::group::Existing tags"
          echo "$(git show-ref --tags -d)"
          echo "::endgroup::"
          NEEDED_PART="$(git describe --tags | grep $CANDIDATE_TAG | wc -l)"
          set -o pipefail
          echo "**\`\$NEEDED_PART\`**: $NEEDED_PART" >> $GITHUB_STEP_SUMMARY
          if [ $NEEDED_PART -eq 0 ] ; then
            echo "::set-output name=tag-name::$CANDIDATE_TAG"
            echo "Using tag name \`$CANDIDATE_TAG\`" >> $GITHUB_STEP_SUMMARY
          else
            echo "::set-output name=tag-name::$CANDIDATE_TAG.$NEEDED_PART"
            echo "Using tag name \`$CANDIDATE_TAG.$NEEDED_PART\`" >> $GITHUB_STEP_SUMMARY
          fi
        
      - name: Create tag and push
        run: |
          git tag ${{ steps.generate-tag.outputs.tag-name }}
          git push origin tag ${{ steps.generate-tag.outputs.tag-name }}
  cut-release:
    runs-on: ubuntu-latest
    needs: make-tag
    steps:
      - name: Checkout spindrift
        uses: actions/checkout@v3
        
      - name: Setup rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Build spindrift
        run: |
          echo "## Buidling Binary" >> $GITHUB_STEP_SUMMARY
          echo "Build started at \`$(date)\`" >> $GITHUB_STEP_SUMMARY
          cargo build --release
          echo "Build finished at \`$(date)\`" >> $GITHUB_STEP_SUMMARY
        
      - name: Cut release and upload artifacts
        id: cut-release
        uses: softprops/action-gh-release@v1
        with: 
          files: "target/release/spindrift"
          prerelease: true
          tag_name: ${{ needs.make-tag.outputs.tag-name }}
          fail_on_unmatched_files: true
          
      - run: |
          echo "Created a release: ${{ steps.cut-release.outputs.url }}" >> $GITHUB_STEP_SUMMARY
